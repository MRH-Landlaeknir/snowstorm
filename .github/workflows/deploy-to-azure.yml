name: Build and Push to ACR

on:
  push:
    branches: [ develop ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Login to azure container registry
      - name: Login to ACR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER}}
          username: ${{ secrets.AZURE_CONTAINER_REGISTRY_USER}}
          password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PW }}

      - name: Docker Login to GHCR
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Pull Public Images
        run: |
          docker pull snomedinternational/snowstorm:latest
          docker pull docker.elastic.co/elasticsearch/elasticsearch:8.11.1
          docker pull snomedinternational/snomedct-browser:latest

      - name: Tag and Push to ACR
        run: |
          docker tag snomedinternational/snowstorm:latest ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER}}/snowstorm:latest
          docker tag docker.elastic.co/elasticsearch/elasticsearch:8.11.1 ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER}}/elasticsearch:8.11.1
          docker tag snomedinternational/snomedct-browser:latest ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER}}/snomedct-browser:latest

          docker push ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER}}/snowstorm:latest
          docker push ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER}}/elasticsearch:8.11.1
          docker push ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER}}/snomedct-browser:latest

      - name: Tag and Push to GHCR
        run: |
          docker tag snomedinternational/snowstorm:latest ghcr.io/mrh-landlaeknir/snowstorm:latest
          docker tag docker.elastic.co/elasticsearch/elasticsearch:8.11.1 ghcr.io/mrh-landlaeknir/elasticsearch:8.11.1
          docker tag snomedinternational/snomedct-browser:latest ghcr.io/mrh-landlaeknir/snomedct-browser:latest

          docker push ghcr.io/mrh-landlaeknir/snowstorm:latest
          docker push ghcr.io/mrh-landlaeknir/elasticsearch:8.11.1
          docker push ghcr.io/mrh-landlaeknir/snomedct-browser:latest

      - name: Login to Azure
        uses: azure/login@v2
        with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }} 
            tenant-id: ${{ secrets.AZURE_TENANT_ID}}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

            
      - name: Create or Update Web App
        run: |

            # SET variables for az deployments and updates
            RESOURCE_GROUP=RG-EL-Infrastructure
            WEBAPP_NAME=snowstorm
            APP_SERVICE_PLAN=embaettilandlaeknis


            if az webapp show --resource-group $RESOURCE_GROUP --name $WEBAPP_NAME > /dev/null 2>&1; then
              echo "Web App $WEBAPP_NAME already exists, skipping creation."
            else
              az webapp create \
                --resource-group $RESOURCE_GROUP \
                --plan $APP_SERVICE_PLAN \
                --name $WEBAPP_NAME \
                --multicontainer-config-type compose \
                --multicontainer-config-file docker-compose.override.yml
            fi
          
            az webapp config container set \
              --resource-group $RESOURCE_GROUP \
              --name $WEBAPP_NAME \
              --docker-registry-server-url https://${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER}}
              --docker-registry-server-user ${{ secrets.AZURE_CONTAINER_REGISTRY_USER }} \
              --docker-registry-server-password ${{ secrets.AZURE_CONTAINER_REGISTRY_PW }}