name: Build and Push to ACR

on:
  push:
    branches: [ develop ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Login to azure container registry
      - name: Login to ACR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER}}
          username: ${{ secrets.AZURE_CONTAINER_REGISTRY_USER}}
          password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PW }}

      - name: Docker Login to GHCR
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Pull Public Images
        run: |
          docker pull snomedinternational/snowstorm:latest
          docker pull docker.elastic.co/elasticsearch/elasticsearch:8.11.1
          docker pull snomedinternational/snomedct-browser:latest

      - name: Tag and Push to ACR
        run: |
          docker tag snomedinternational/snowstorm:latest ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER}}/snowstorm:latest
          docker tag docker.elastic.co/elasticsearch/elasticsearch:8.11.1 ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER}}/elasticsearch:8.11.1
          docker tag snomedinternational/snomedct-browser:latest ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER}}/snomedct-browser:latest

          docker push ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER}}/snowstorm:latest
          docker push ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER}}/elasticsearch:8.11.1
          docker push ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER}}/snomedct-browser:latest

      - name: Tag and Push to GHCR
        run: |
          docker tag snomedinternational/snowstorm:latest ghcr.io/mrh-landlaeknir/snowstorm:latest
          docker tag docker.elastic.co/elasticsearch/elasticsearch:8.11.1 ghcr.io/mrh-landlaeknir/elasticsearch:8.11.1
          docker tag snomedinternational/snomedct-browser:latest ghcr.io/mrh-landlaeknir/snomedct-browser:latest

          docker push ghcr.io/mrh-landlaeknir/snowstorm:latest
          docker push ghcr.io/mrh-landlaeknir/elasticsearch:8.11.1
          docker push ghcr.io/mrh-landlaeknir/snomedct-browser:latest

      - name: Login to Azure
        uses: azure/login@v1
        with:
            creds: ${{ secrets.AZURE_SERVICE_PRINCIPAL}}


      - name: Create or Update Web App
        run: |

            # SET variables for az deployments and updates
            RESOURCE_GROUP=RG-EL-Infrastructure
            WEBAPP_NAME=snowstorm
            WEBAPP_NAME2=elasticsearch
            APP_SERVICE_PLAN=embaettilandlaeknis


            if az webapp show --resource-group $RESOURCE_GROUP --name $WEBAPP_NAME > /dev/null 2>&1; then
              echo "Web App $WEBAPP_NAME already exists, skipping creation."
            else
              az container create \
                --resource-group <resource-group-name> \
                --name elasticsearch \
                --image directoratehealth.azurecr.io/elasticsearch/elasticsearch:8.11.1 \
                --ports 9200 \
                --cpu 2 \
                --memory 4 \
                --environment-variables discovery.type=single-node xpack.security.enabled=false
            fi

            if az webapp show --resource-group $RESOURCE_GROUP --name $WEBAPP_NAME2 > /dev/null 2>&1; then
              echo "Web App $WEBAPP_NAME2 already exists, skipping creation."
            else
              az container create \
                --resource-group <resource-group-name> \
                --name snowstorm \
                --image directoratehealth.azurecr.io/snowstorm:latest \
                --ports 8080 \
                --cpu 2 \
                --memory 4 \
                --environment-variables ELASTICSEARCH_URLS=http://elasticsearch:9200
            fi

            